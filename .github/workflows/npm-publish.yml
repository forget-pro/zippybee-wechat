name: NPM Publish

on:
  workflow_dispatch: # 支持手动触发

permissions:
  contents: write # 允许写入代码库内容
  packages: write # 允许写入包
  id-token: write # 允许写入 ID 令牌

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Set Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Publish to NPM
        run: |
          # 将 NPM Token 写入 .npmrc 文件
           echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
           ls -a ~  # 确认 .npmrc 是否正确生成
           cat ~/.npmrc  # 查看文件内容
           #npm version patch
           #npm version patch
           VERSION=$(node -p "require('./package.json').version")
           echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
          # 执行发布
          # npm publish --access public --no-git-tag-version
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Tag and commit version update
        run: |
          #git push
          #git tag "v${{ env.PACKAGE_VERSION }}"
          #git push origin "v${{ env.PACKAGE_VERSION }}"

      - name: Read the latest changelog section
        id: changelog
        run: |
          # 使用 awk 提取最新版本的 changelog
          changelog=$(awk '/^## \[/ {if (f==1) exit} f==1 {print} /^## \[/ {f=1}' CHANGELOG.md)
          # 输出提取的 changelog 内容
          echo "Changelog: $changelog"
          # 使用 GITHUB_OUTPUT 设置输出
          echo "changelog=$changelog" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          name: v${{ env.PACKAGE_VERSION }}
          files: |
            dist/
          release_notes: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
